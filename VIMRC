" *********************************************
"  VIM基本配置
" *********************************************
" 设置当前系统
"
if has("win32") || has("win32unix")
    let g:OS#name = "win"
    let g:OS#win = 1
    let g:OS#mac = 0
    let g:OS#unix = 0
elseif has("mac")
    let g:OS#name = "mac"
    let g:OS#mac = 1
    let g:OS#win = 0
    let g:OS#unix = 0
elseif has("unix")
    let g:OS#name = "unix"
    let g:OS#unix = 1
    let g:OS#win = 0
    let g:OS#mac = 0
endif
if has("gui_running")
    let g:OS#gui = 1
else
    let g:OS#gui = 0
endif

"置粘贴模式，这样粘贴过来的程序代码就不会错位了。
set paste 
"设置帮助信息 
set helplang=cn 
" 显示行号
set number
" 设置相对行号
set relativenumber
" 开启语法高亮
syntax on
" 突出显示当前行
set cursorline
           
" 突出显示当前列
" set cursorcolumn

"设置命令行的高度
set cmdheight=2
"高亮搜索的关键字
set hlsearch
"增强模式中的命令行自动完成操作
set wildmenu
" 设置leader键
let mapleader = ","
"Fast reloading of the .vimrc
" map <silent> <leader>ss :source ~/.vimrc<cr>
"Fast editing of .vimrc
map <silent> <leader>ee :e ~/.vimrc<cr>
"Fast editing of Vim Shortcuts files
map <silent> <leader>sc :e ~/GitHubFiles/ColinVim/VIM/VimBasicCommand.md<cr>
"When .vimrc is edited, reload it
autocmd! bufwritepost .vimrc source ~/.vimrc
" 支持UTF-8编码
set encoding=utf-8
" 设置共享粘贴板
set clipboard=unnamed
" filetypes
filetype plugin indent on 

" *********************************************
" 快捷键配置
" *********************************************
imap <C-e> <Esc>

" *********************************************
" 文件buffer的切换配置 
" *********************************************
" 切换到下一个buffer
map <silent> <leader>bn :bn<cr>
" 切换到上一个buffer
map <silent> <leader>bp :bp<cr>



" *********************************************
" 光标形状设置
" *********************************************
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

" *********************************************
" 主题配置
" *********************************************
set t_Co=256
set background=dark
" colorscheme solarized
" colorscheme desert
colorscheme molokai
" colorscheme Tomorrow-Night







" *********************************************
" Vbundle插件管理                
" *********************************************
set nocompatible              " required 这是必须的
filetype off                  " required 
   
" set the runtime path to include Vundle and initialize
" 在此设置vbundle运行时的路径
set rtp+=~/.vim/bundle/Vundle.vim
" 初始化vbundle
call vundle#begin()        
 
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')
 
" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'  " 始终应该是第一个
Plugin 'flazz/vim-colorschemes'
Plugin 'majutsushi/tagbar'
Plugin 'scrooloose/nerdtree'
Plugin 'Valloric/YouCompleteMe'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'kien/ctrlp.vim'
Plugin 'romgrk/winteract.vim'
Plugin 'Yggdroot/indentLine'
Plugin 'EasyGrep'
Plugin 'scrooloose/nerdcommenter'
Plugin 'terryma/vim-multiple-cursors'

"Plugin 'scrooloose/syntastic'
"Plugin 'joonty/vim-do.git'
"Plugin 'wahidrahim/resize-font'
"Plugin 'thinca/vim-fontzoom'
"Plugin 'klen/repo-vim'
" Add all your plugins here (note older versions of Vundle used Bundle instead of Plugin)
" All of your Plugins must be added before the following line                 
" 每个插件都已经在这一行之前
call vundle#end()            " required
filetype plugin indent on    " required





" *********************************************
" split 分割布局相关
" *********************************************
set splitbelow
set splitright
"快捷键，ctrl+l切换到左边布局，ctrl+h切换到右边布局
"ctrl+k切换到上面布局，ctrl+j切换到下面布局
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
" 触发winteract 分屏管理插件
nmap <leader>gw :InteractiveWindow<CR>



" *********************************************
" 代码折叠
" *********************************************
" 开启代码折叠功能
" 根据当前代码行的缩进来进行代码折叠
set foldmethod=indent
set foldlevel=99
" 将za快捷键映射到space空格键上
nnoremap <space> za


" *********************************************
" NERD插件属性
" *********************************************
" 开启vim的时候默认开启NERDTree
" au vimenter * NERDTree   
" autocmd VimEnter * NERDTree
" 设置F2为开启NERDTree的快键 
map <F2> :NERDTreeToggle<CR> 
" 关闭NERDTree快捷键
" map <leader>t :NERDTreeToggle<CR>
" 显示行号
let NERDTreeShowLineNumbers=1
let NERDTreeAutoCenter=1
" 是否显示隐藏文件
let NERDTreeShowHidden=1
" 设置宽度
let NERDTreeWinSize=31
" 在终端启动vim时，共享NERDTree
let g:nerdtree_tabs_open_on_console_startup=1
" 忽略一下文件的显示
let NERDTreeIgnore=['\.pyc','\~$','\.swp']
" 显示书签列表
let NERDTreeShowBookmarks=1




" *********************************************
" tagbar插件属性
" *********************************************
" 配置打开和关闭tagbar插件
map <F3> : TagbarToggle<CR>
" " 启动时自动focus
let g:tagbar_auto_faocus =1 
" 启动指定文件时自动开启tagbar
autocmd BufReadPost *.py,*.cpp,*.c,*.h,*.hpp,*.cc,*.cxx call tagbar#autoopen()




" *********************************************
" YCM插件相关
" *********************************************
"let g:ycm_autoclose_preview_window_after_completion=1
" 跳转到定义处
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>
" 默认tab、s-tab和自动补全冲突
let g:ycm_key_list_select_completion = ['<TAB>', '<c-n>', '<Down>'] 
let g:ycm_key_list_previous_completion = ['<S-TAB>', '<c-p>', '<Up>'] 
"let g:ycm_auto_trigger = 1
" 设置写注释的时候也进行自动补全
let g:ycm_complete_in_comments = 1
set completeopt=menu,menuone
let g:ycm_add_preview_to_completeopt = 0
let g:ycm_collect_identifiers_from_comments_and_strings = 1
let g:ycm_complete_in_strings=1
let g:ycm_key_invoke_completion = '<c-z>'
noremap <c-z> <NOP>

let g:ycm_semantic_triggers =  {
			\ 'c,cpp,python,java,go,erlang,perl': ['re!\w{2}'],
			\ 'cs,lua,javascript': ['re!\w{2}'],
			\ }
let g:ycm_filetype_blacklist = {
      \ 'tagbar' : 1,
      \ 'qf' : 1,
      \ 'notes' : 1,
      \ 'unite' : 1,
      \ 'text' : 1,
      \ 'vimwiki' : 1,
      \ 'pandoc' : 1,
      \ 'infolog' : 1,
      \ 'mail' : 1
      \}



" *********************************************
" airline状态栏插件属性
" *********************************************
" 开启powerline字体
let g:airline_powerline_fonts = 1
" 使用powerline包装过的字体
set guifont=Source\ Code\ Pro\ for\ Powerline:h14
let g:airline#extensions#tabline#enabled = 1




" *********************************************
" ctrlp
" *********************************************
let g:ctrlp_map = '<c-p>' 
let g:ctrlp_cmd = 'CtrlP'
" 设置过滤不进行查找的后缀名 
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn|pyc)$'





" **********************************************
" PEP 8 编码风格
" **********************************************
au BufNewFile,BufRead *.py set tabstop=4 |set softtabstop=4|set shiftwidth=4|set textwidth=79|set expandtab|set autoindent|set fileformat=unix
au BufNewFile,BufRead *.js, *.html, *.css set tabstop=2|set softtabstop=2|set shiftwidth=2




" **********************************************
" NERDCommenter 注释配置相关
" **********************************************
let g:NERDSpaceDelims=1

" **********************************************
" vim_multiple_cursors 配置相关
" **********************************************
let g:multi_cursor_use_default_mapping=0
let g:multi_cursor_next_key='<C-n>'
let g:multi_cursor_prev_key='<C-m>'
let g:multi_cursor_skip_key='<C-x>'
let g:multi_cursor_quit_key='<Esc>'
" **********************************************
" Syntastic 配置相关
" **********************************************
" set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*

" let  g:syntastic_always_populate_loc_list = 1
"let  g:syntastic_auto_loc_list = 1
"let  g:syntastic_check_on_open = 1
"let  g:syntastic_check_on_wq = 0



" **********************************************
" The END
" **********************************************
" **********************************************
" The END
" **********************************************



